name: Main

on:
  push:
    branches:
    - '1.19'
    tags:
    - 'v*'
  pull_request:
    branches:
    - '1.19'
    tags:
      - 'v*' # for testing ONLY

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Setup jdk 17
      uses: actions/setup-java@v2
      with:
        distribution: adopt
        java-version: 17

    - name: Validate gradle wrapper
      uses: gradle/wrapper-validation-action@v1

    - name: Setup Gradle and Build
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: wrapper
        arguments: build --scan
        cache-read-only: false

    - name: Upload Fabric Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: fabric-artifacts
        path: fabric/build/libs/

    - name: Upload Forge Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: forge-artifacts
        path: forge/build/libs/

  release_github:
    name: "Release on GitHub"
    runs-on: ubuntu-latest
    needs: build
    # if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, 'SNAPSHOT')
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Read Project Version
      id: read_project_version
      uses: christian-draeger/read-properties@1
      with:
        path: ./gradle.properties
        property: projectBaseVersion

    - name: Read Minecraft Version
      id: read_mc_version
      uses: christian-draeger/read-properties@1
      with:
        path: ./gradle.properties
        property: mcVersionFull

    - name: Read Changelog
      id: read_changelog
      shell: bash
      run: |
        CHANGELOG=$(sed '/===/Q' changelog.txt | grep -)
        echo "Changelog:\n$CHANGELOG"
        CHANGELOG="${CHANGELOG//'%'/'%25'}"
        CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
        CHANGELOG="${CHANGELOG//$'\r'/'%0D'}" 
        echo "changelog=$CHANGELOG" >> $GITHUB_OUTPUT

    - name: Download Artifacts
      id: download_artifacts
      uses: actions/download-artifact@v3
      with:
        path: build_artifacts

    - name: GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref }}
        name: Release ${{ steps.read_project_version.outputs.value }} for Minecraft ${{ steps.read_mc_version.outputs.value }}
        body: ${{ steps.read_changelog.outputs.changelog }}
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
        files: |
          ${{ steps.download_artifacts.outputs.download-path }}/fabric-artifacts/*
          ${{ steps.download_artifacts.outputs.download-path }}/forge-artifacts/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release_curseforge:
    name: Release on Curseforge
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Setup jdk 17
      uses: actions/setup-java@v2
      with:
        distribution: adopt
        java-version: 17

    - name: Curseforge Publish
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: wrapper
        arguments: curseforge
        cache-read-only: true
      env:
        CURSE_API_KEY: ${{ secrets.CURSE_API_KEY }}

  release_modrinth:
    name: Release on Modrinth
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Setup jdk 17
      uses: actions/setup-java@v2
      with:
        distribution: adopt
        java-version: 17

    - name: Modrinth Publish
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: wrapper
        arguments: modrinth
        cache-read-only: true
      env:
        MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}

  release-maven:
    name: Release on Maven
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Setup jdk 17
      uses: actions/setup-java@v2
      with:
        distribution: adopt
        java-version: 17

    - name: Maven Publish
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: wrapper
        arguments: publish
        cache-read-only: true
      env:
        MAVEN_USER: ${{ secrets.MAVEN_USER }}
        MAVEN_PASS: ${{ secrets.MAVEN_PASS }}
        MAVEN_REPO: ${{ secrets.MAVEN_REPO }}
        MAVEN_SNAPSHOT_REPO: ${{ secrets.MAVEN_SNAPSHOT_REPO }}
        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.SIGNING_KEY }}
        ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.SIGNING_PASS }}
